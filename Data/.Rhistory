risk == equal_max$risk) %>%
select(spy_wt, shy_wt, gld_wt)
# Graph weights
eq_wt %>%
rename("SPY" = spy_wt,
"SHY" = shy_wt,
"GLD" = gld_wt) %>%
gather(key,value) %>%
ggplot(aes(factor(key, level = c("SPY", "SHY", "GLD")), value*100)) +
geom_bar(stat = 'identity', fill = "blue") +
geom_text(aes(label = round(value,2)*100), nudge_y = 5) +
labs(x = "Assets",
y = "Weights (%)",
title = "Derived weighting to improve returns")
install.packages("jsonlite")
library("jsonlite")
btc <- jsonlite::fromJSON("https://api.binance.com/api/v3/klines?symbol=BTCUSDT&interval=1d&limit=365")
btc
plot(btc, type="l")
library("jsonlite")
btc <- jsonlite::fromJSON("https://api.binance.com/api/v3/klines?symbol=BTCUSDT&interval=1d&limit=365")
ada <- jsonlite::fromJSON("https://api.binance.com/api/v3/klines?symbol=ADAUSDT&interval=1d&limit=365")
plot(ada)
plot(ada, btc)
data<-data.frame(btc,ada)
plot(data)
plot(data.btc)
plot(data$x, data$.btc)
btc$x
btc.x
btc
btc[1]
btc[2]
btc[3]
ggplot() + btc + ada
ggplot(btc)
library(ggplot)
library(ggplot2)
ggplot(btc)
ggplot(data=btc)
plot(data)
plot(ada)
plot(btc)
plot(btc, type="l")
line(ada, type="l", col="green")
line(ada, col="green")
lines(ada, col="green")
plot(btc, type="l")
lines(ada, col="green")
plot(btc, type="l")
par(new=TRUE)
plot(ada, type="l", col="green")
plot(btc, type="l")
plot(ada, type="l", col="green", add=TRUE)
plot(btc, type="l")
plot(ada, type="l", col="green", add=TRUE)
plot(btc, type="l")
par(new=T)
plot(ada, type="l", col="green", add=TRUE)
library("jsonlite")
btc <- jsonlite::fromJSON("https://api.binance.com/api/v3/klines?symbol=BTCUSDT&interval=1d&limit=365")
ada <- jsonlite::fromJSON("https://api.binance.com/api/v3/klines?symbol=ADAUSDT&interval=1d&limit=365")
eth <- jsonlite::fromJSON("https://api.binance.com/api/v3/klines?symbol=ETHUSDT&interval=1d&limit=365")
plot(btc, type="l")
par(new=T)
plot(ada, type="l", col="green", add=TRUE)
par(new=T)
plot(eth, type="l", col="red", add=TRUE)
library("jsonlite")
btc <- jsonlite::fromJSON("https://api.binance.com/api/v3/klines?symbol=BTCUSDT&interval=1d&limit=365")
ada <- jsonlite::fromJSON("https://api.binance.com/api/v3/klines?symbol=ADAUSDT&interval=1d&limit=365")
eth <- jsonlite::fromJSON("https://api.binance.com/api/v3/klines?symbol=ETHUSDT&interval=1d&limit=365")
doge <- jsonlite::fromJSON("https://api.binance.com/api/v3/klines?symbol=DOGEUSDT&interval=1d&limit=365")
plot(btc, type="l")
par(new=T)
plot(ada, type="l", col="green", add=TRUE)
par(new=T)
plot(eth, type="l", col="red", add=TRUE)
par(new=T)
plot(doge, type="l", col="red", add=TRUE)
library("jsonlite")
btc <- jsonlite::fromJSON("https://api.binance.com/api/v3/klines?symbol=BTCUSDT&interval=1d&limit=365")
ada <- jsonlite::fromJSON("https://api.binance.com/api/v3/klines?symbol=ADAUSDT&interval=1d&limit=365")
eth <- jsonlite::fromJSON("https://api.binance.com/api/v3/klines?symbol=ETHUSDT&interval=1d&limit=365")
doge <- jsonlite::fromJSON("https://api.binance.com/api/v3/klines?symbol=DOGEUSDT&interval=1d&limit=365")
plot(btc, type="l")
par(new=T)
plot(ada, type="l", col="green", add=TRUE)
par(new=T)
plot(eth, type="l", col="red", add=TRUE)
par(new=T)
plot(doge, type="l", col="blue", add=TRUE)
library("jsonlite")
btc <- jsonlite::fromJSON("https://api.binance.com/api/v3/klines?symbol=BTCUSDT&interval=1d&limit=365")
ada <- jsonlite::fromJSON("https://api.binance.com/api/v3/klines?symbol=ADAUSDT&interval=1d&limit=365")
eth <- jsonlite::fromJSON("https://api.binance.com/api/v3/klines?symbol=ETHUSDT&interval=1d&limit=365")
doge <- jsonlite::fromJSON("https://api.binance.com/api/v3/klines?symbol=DOGEUSDT&interval=1d&limit=365")
plot(btc, type="l")
par(new=T)
#plot(ada, type="l", col="green", add=TRUE)
#par(new=T)
#plot(eth, type="l", col="red", add=TRUE)
#par(new=T)
plot(doge, type="l", col="blue", add=TRUE)
library("jsonlite")
btc <- jsonlite::fromJSON("https://api.binance.com/api/v3/klines?symbol=BTCUSDT&interval=1d&limit=365")
ada <- jsonlite::fromJSON("https://api.binance.com/api/v3/klines?symbol=ADAUSDT&interval=1d&limit=365")
eth <- jsonlite::fromJSON("https://api.binance.com/api/v3/klines?symbol=ETHUSDT&interval=1d&limit=365")
doge <- jsonlite::fromJSON("https://api.binance.com/api/v3/klines?symbol=DOGEUSDT&interval=1d&limit=365")
plot(btc, col="magenta", type="l")
par(new=T)
#plot(ada, type="l", col="green", add=TRUE)
#par(new=T)
#plot(eth, type="l", col="red", add=TRUE)
#par(new=T)
plot(doge, type="l", col="blue", add=TRUE)
axis.Date(1, at=seq(min(df$date), max(df$date), by="months"), format="%m-%Y")
axis(1, btc$dates, format(btc$dates, "%Y-%m-%d"))
axis(1, format(1, "%Y-%m-%d"))
axis(1, format("%Y-%m-%d"))
plot(btc, type="l")
axis(1, format("%Y-%m-%d"))
plot(doge, type="l")
plot(eth, type="l")
plot(ada, type="l")
plot(doge, type="l")
doge
View(btc)
btc$v1
btc$1
btc[1]
btc[2]
btc[1][2]
btc[1].[2]
btc[1].2
glimpse(btc)
library(glimpse)
library(dplyr)
glimpse(btc)
new DateTime(1970,1,1,0,0,0,0,System.DateTimeKind.Utc).AddMilliseconds(1593339378252)
btc[1]
as_datetime(btc[1])
parsedate(btc[1])
as.Date.numeric(btc[1])
as.Date.default(btc[1])
as.Date.numeric(btc[1])
install.packages(datetime)
library(datetime)
as.POSIXct(btc[1], origin="1970-01-01")
library(anytime)
install.packages(anytime)
install.packages("anytime")
anytime(btc[1])
library(anytime)
anytime(btc[1])
anytime(btc[1], asUTC=FALSE)
anytime(1590105600000)
doge <- jsonlite::fromJSON("https://api.binance.com/api/v3/klines?symbol=DOGEUSDT&interval=1d&limit=30")
plot(doge, type="l")
library("jsonlite")
# original 365
#btc <- jsonlite::fromJSON("https://api.binance.com/api/v3/klines?symbol=BTCUSDT&interval=1d&limit=365")
btc <- jsonlite::fromJSON("https://api.binance.com/api/v3/klines?symbol=BTCUSDT&interval=1d&limit=30")
ada <- jsonlite::fromJSON("https://api.binance.com/api/v3/klines?symbol=ADAUSDT&interval=1d&limit=30")
eth <- jsonlite::fromJSON("https://api.binance.com/api/v3/klines?symbol=ETHUSDT&interval=1d&limit=30")
doge <- jsonlite::fromJSON("https://api.binance.com/api/v3/klines?symbol=DOGEUSDT&interval=1d&limit=30")
plot(btc, col="magenta", type="l")
par(new=T)
plot(ada, type="l", col="green", add=TRUE)
par(new=T)
plot(eth, type="l", col="red", add=TRUE)
par(new=T)
plot(doge, type="l", col="blue", add=TRUE)
plot(doge, type="l")
par(new=T)
plot(btc, type="l", col="red")
plot(doge, type="l")
doge <- jsonlite::fromJSON("https://api.binance.com/api/v3/klines?symbol=DOGEUSDT&interval=1d&limit=60")
plot(doge, type="l")
btc <- jsonlite::fromJSON("https://api.binance.com/api/v3/klines?symbol=BTCUSDT&interval=1d&limit=60")
par(new=T)
plot(btc, type="l", col="red")
btc <- jsonlite::fromJSON("https://api.binance.com/api/v3/klines?symbol=BTCUSDT&interval=1d&limit=10")
doge <- jsonlite::fromJSON("https://api.binance.com/api/v3/klines?symbol=DOGEUSDT&interval=1d&limit=10")
plot(doge, type="l")
par(new=T)
plot(btc, type="l", col="red")
plot(btc, type="l", col="red")
plot(doge, type="l")
plot(btc, type="l", col="red")
par(new=T)
plot(doge, type="l" col="blue")
plot(doge, type="l", col="blue")
ada <- jsonlite::fromJSON("https://api.binance.com/api/v3/klines?symbol=ADAUSDT&interval=1d&limit=10")
par(new=T)
plot(ada, type="l", col="green")
btc <- jsonlite::fromJSON("https://api.binance.com/api/v3/klines?symbol=BTCUSDT&interval=1d&limit=10")
btc <- jsonlite::fromJSON("https://api.binance.com/api/v3/klines?symbol=BTCUSDT&interval=1d&limit=10")
plot(btc, type="l", col="red")
dogebtc <- jsonlite::fromJSON("https://api.binance.com/api/v3/klines?symbol=DOGEBTC&interval=1d&limit=10")
par(new=T)
plot(dogebtc, type="l", col="blue")
par(new=T)
plot(doge, type="l", col="green")
library("jsonlite")
# original 365
#btc <- jsonlite::fromJSON("https://api.binance.com/api/v3/klines?symbol=BTCUSDT&interval=1d&limit=365")
btc <- jsonlite::fromJSON("https://api.binance.com/api/v3/klines?symbol=BTCUSDT&interval=1d&limit=30")
ada <- jsonlite::fromJSON("https://api.binance.com/api/v3/klines?symbol=ADAUSDT&interval=1d&limit=30")
eth <- jsonlite::fromJSON("https://api.binance.com/api/v3/klines?symbol=ETHUSDT&interval=1d&limit=30")
doge <- jsonlite::fromJSON("https://api.binance.com/api/v3/klines?symbol=DOGEUSDT&interval=1d&limit=30")
dogebtc <- jsonlite::fromJSON("https://api.binance.com/api/v3/klines?symbol=DOGEBTC&interval=1d&limit=30")
plot(btc, col="magenta", type="l")
par(new=T)
#plot(ada, type="l", col="green", add=TRUE)
#par(new=T)
#plot(eth, type="l", col="red", add=TRUE)
#par(new=T)
plot(doge, type="l", col="blue", add=TRUE)
par(new=T)
plot(dogebtc, type="l", col="green")
plot(doge, type="l", col="green")
plot(dogebtc, type="l", col="green")
plot(btc, type="l", col="green")
library("jsonlite")
# original 365
#btc <- jsonlite::fromJSON("https://api.binance.com/api/v3/klines?symbol=BTCUSDT&interval=1d&limit=365")
btc <- jsonlite::fromJSON("https://api.binance.com/api/v3/klines?symbol=BTCUSDT&interval=1d&limit=30")
ada <- jsonlite::fromJSON("https://api.binance.com/api/v3/klines?symbol=ADAUSDT&interval=1d&limit=30")
eth <- jsonlite::fromJSON("https://api.binance.com/api/v3/klines?symbol=ETHUSDT&interval=1d&limit=30")
doge <- jsonlite::fromJSON("https://api.binance.com/api/v3/klines?symbol=DOGEUSDT&interval=1d&limit=30")
dogebtc <- jsonlite::fromJSON("https://api.binance.com/api/v3/klines?symbol=DOGEBTC&interval=1d&limit=30")
plot(btc, col="magenta", type="l")
par(new=T)
#plot(ada, type="l", col="green", add=TRUE)
#par(new=T)
#plot(eth, type="l", col="red", add=TRUE)
#par(new=T)
plot(doge, type="l", col="blue", add=TRUE)
par(new=T)
plot(dogebtc, type="l", col="green")
library("jsonlite")
# original 365
#btc <- jsonlite::fromJSON("https://api.binance.com/api/v3/klines?symbol=BTCUSDT&interval=1d&limit=365")
btc <- jsonlite::fromJSON("https://api.binance.com/api/v3/klines?symbol=BTCUSDT&interval=1d&limit=30")
ada <- jsonlite::fromJSON("https://api.binance.com/api/v3/klines?symbol=ADAUSDT&interval=1d&limit=30")
eth <- jsonlite::fromJSON("https://api.binance.com/api/v3/klines?symbol=ETHUSDT&interval=1d&limit=30")
doge <- jsonlite::fromJSON("https://api.binance.com/api/v3/klines?symbol=DOGEUSDT&interval=1d&limit=30")
dogebtc <- jsonlite::fromJSON("https://api.binance.com/api/v3/klines?symbol=DOGEBTC&interval=1d&limit=30")
plot(btc, col="magenta", type="l")
par(new=T)
#plot(ada, type="l", col="green", add=TRUE)
#par(new=T)
#plot(eth, type="l", col="red", add=TRUE)
#par(new=T)
plot(doge, type="l", col="blue", add=TRUE)
par(new=T)
plot(dogebtc, type="l", col="green")
plot(btc, col="magenta", type="l")
par(new=T)
plot(eth, type="l", col="red", add=TRUE)
par(new=T)
plot(ada, type="l", col="blue", add=TRUE)
plot(doge, type="l", col="green", add=TRUE)
plot(btc, col="magenta", type="l")
par(new=T)
plot(eth, type="l", col="red", add=TRUE)
par(new=T)
plot(ada, type="l", col="blue", add=TRUE)
par(new=T)
plot(doge, type="l", col="green", add=TRUE)
par(new=T)
plot(dogebtc, type="l", col="orange", add=TRUE)
ada
View(ada)
View(btc)
View(eth)
View(ada)
View(doge)
View(dogebtc)
View(btc)
View(eth)
View(doge)
plot(doge, type="l", col="green", add=TRUE)
par(new=T)
plot(dogebtc, type="l", col="orange", add=TRUE)
adabtc <- jsonlite::fromJSON("https://api.binance.com/api/v3/klines?symbol=ADABTC&interval=1d&limit=30")
plot(adabtc, type="l", col="blue", add=TRUE)
par(new=T)
plot(dogebtc, type="l", col="orange", add=TRUE)
ethbtc <- jsonlite::fromJSON("https://api.binance.com/api/v3/klines?symbol=ETHBTC&interval=1d&limit=30")
par(new=T)
plot(ethbtc, type="l", col="green", add=TRUE)
library("jsonlite")
# original 365
#btc <- jsonlite::fromJSON("https://api.binance.com/api/v3/klines?symbol=BTCUSDT&interval=1d&limit=365")
btc <- jsonlite::fromJSON("https://api.binance.com/api/v3/klines?symbol=BTCUSDT&interval=1d&limit=30")
ada <- jsonlite::fromJSON("https://api.binance.com/api/v3/klines?symbol=ADAUSDT&interval=1d&limit=30")
eth <- jsonlite::fromJSON("https://api.binance.com/api/v3/klines?symbol=ETHUSDT&interval=1d&limit=30")
doge <- jsonlite::fromJSON("https://api.binance.com/api/v3/klines?symbol=DOGEUSDT&interval=1d&limit=30")
ethbtc <- jsonlite::fromJSON("https://api.binance.com/api/v3/klines?symbol=ETHBTC&interval=1d&limit=30")
adabtc <- jsonlite::fromJSON("https://api.binance.com/api/v3/klines?symbol=ADABTC&interval=1d&limit=30")
dogebtc <- jsonlite::fromJSON("https://api.binance.com/api/v3/klines?symbol=DOGEBTC&interval=1d&limit=30")
plot(btc, col="magenta", type="l")
par(new=T)
#plot(ada, type="l", col="green", add=TRUE)
#par(new=T)
#plot(eth, type="l", col="red", add=TRUE)
#par(new=T)
plot(doge, type="l", col="blue", add=TRUE)
par(new=T)
plot(dogebtc, type="l", col="green")
plot(dogebtc, type="l", col="orange", add=TRUE)
par(new=T)
plot(adabtc, type="l", col="blue", add=TRUE)
par(new=T)
plot(ethbtc, type="l", col="green", add=TRUE)
View(btc)
View(eth)
View(ada)
View(doge)
View(dogebtc)
View(ethbtc)
View(adabtc)
library("jsonlite")
# original 365
#btc <- jsonlite::fromJSON("https://api.binance.com/api/v3/klines?symbol=BTCUSDT&interval=1d&limit=365")
btc <- jsonlite::fromJSON("https://api.binance.com/api/v3/klines?symbol=BTCUSDT&interval=1d&limit=30")
ada <- jsonlite::fromJSON("https://api.binance.com/api/v3/klines?symbol=ADAUSDT&interval=1d&limit=30")
eth <- jsonlite::fromJSON("https://api.binance.com/api/v3/klines?symbol=ETHUSDT&interval=1d&limit=30")
doge <- jsonlite::fromJSON("https://api.binance.com/api/v3/klines?symbol=DOGEUSDT&interval=1d&limit=30")
ethbtc <- jsonlite::fromJSON("https://api.binance.com/api/v3/klines?symbol=ETHBTC&interval=1d&limit=30")
adabtc <- jsonlite::fromJSON("https://api.binance.com/api/v3/klines?symbol=ADABTC&interval=1d&limit=30")
dogebtc <- jsonlite::fromJSON("https://api.binance.com/api/v3/klines?symbol=DOGEBTC&interval=1d&limit=30")
#chart1
plot(btc, col="grey", type="l")
par(new=T)
plot(ada, type="l", col="blue", add=TRUE)
par(new=T)
plot(eth, type="l", col="green", add=TRUE)
par(new=T)
plot(doge, type="l", col="orange", add=TRUE)
#chart2
plot(dogebtc, type="l", col="orange", add=TRUE)
par(new=T)
plot(adabtc, type="l", col="blue", add=TRUE)
par(new=T)
plot(ethbtc, type="l", col="green", add=TRUE)
bnbbtc <- jsonlite::fromJSON("https://api.binance.com/api/v3/klines?symbol=BNBBTC&interval=1d&limit=30")
par(new=T)
plot(bnbbtc, type="l", col="magenta", add=TRUE)
library("jsonlite")
# original 365
#btc <- jsonlite::fromJSON("https://api.binance.com/api/v3/klines?symbol=BTCUSDT&interval=1d&limit=365")
btc <- jsonlite::fromJSON("https://api.binance.com/api/v3/klines?symbol=BTCUSDT&interval=1d&limit=30")
ada <- jsonlite::fromJSON("https://api.binance.com/api/v3/klines?symbol=ADAUSDT&interval=1d&limit=30")
eth <- jsonlite::fromJSON("https://api.binance.com/api/v3/klines?symbol=ETHUSDT&interval=1d&limit=30")
doge <- jsonlite::fromJSON("https://api.binance.com/api/v3/klines?symbol=DOGEUSDT&interval=1d&limit=30")
ethbtc <- jsonlite::fromJSON("https://api.binance.com/api/v3/klines?symbol=ETHBTC&interval=1d&limit=30")
adabtc <- jsonlite::fromJSON("https://api.binance.com/api/v3/klines?symbol=ADABTC&interval=1d&limit=30")
dogebtc <- jsonlite::fromJSON("https://api.binance.com/api/v3/klines?symbol=DOGEBTC&interval=1d&limit=30")
#chart1
plot(btc, col="grey", type="l")
par(new=T)
plot(ada, type="l", col="blue", add=TRUE)
par(new=T)
plot(eth, type="l", col="green", add=TRUE)
par(new=T)
plot(doge, type="l", col="orange", add=TRUE)
par(new=T)
plot(bnbbtc, type="l", col="magenta", add=TRUE)
View(bnbbtc)
bnb <- jsonlite::fromJSON("https://api.binance.com/api/v3/klines?symbol=BNBUSTD&interval=1d&limit=30")
bnb <- jsonlite::fromJSON("https://api.binance.com/api/v3/klines?symbol=BNBUSTD&interval=1d&limit=30")
bnb <- jsonlite::fromJSON("https://api.binance.com/api/v3/klines?symbol=BNBBTC&interval=1d&limit=30")
library("jsonlite")
# original 365
#btc <- jsonlite::fromJSON("https://api.binance.com/api/v3/klines?symbol=BTCUSDT&interval=1d&limit=365")
btc <- jsonlite::fromJSON("https://api.binance.com/api/v3/klines?symbol=BTCUSDT&interval=1d&limit=30")
ada <- jsonlite::fromJSON("https://api.binance.com/api/v3/klines?symbol=ADAUSDT&interval=1d&limit=30")
eth <- jsonlite::fromJSON("https://api.binance.com/api/v3/klines?symbol=ETHUSDT&interval=1d&limit=30")
doge <- jsonlite::fromJSON("https://api.binance.com/api/v3/klines?symbol=DOGEUSDT&interval=1d&limit=30")
ethbtc <- jsonlite::fromJSON("https://api.binance.com/api/v3/klines?symbol=ETHBTC&interval=1d&limit=30")
adabtc <- jsonlite::fromJSON("https://api.binance.com/api/v3/klines?symbol=ADABTC&interval=1d&limit=30")
dogebtc <- jsonlite::fromJSON("https://api.binance.com/api/v3/klines?symbol=DOGEBTC&interval=1d&limit=30")
#chart1
plot(btc, col="grey", type="l")
par(new=T)
plot(ada, type="l", col="blue", add=TRUE)
par(new=T)
plot(eth, type="l", col="green", add=TRUE)
par(new=T)
plot(doge, type="l", col="orange", add=TRUE)
#chart2
plot(dogebtc, type="l", col="orange", add=TRUE)
par(new=T)
plot(adabtc, type="l", col="blue", add=TRUE)
par(new=T)
plot(ethbtc, type="l", col="green", add=TRUE)
library("jsonlite")
# original 365
#btc <- jsonlite::fromJSON("https://api.binance.com/api/v3/klines?symbol=BTCUSDT&interval=1d&limit=365")
btc <- jsonlite::fromJSON("https://api.binance.com/api/v3/klines?symbol=BTCUSDT&interval=1d&limit=30")
ada <- jsonlite::fromJSON("https://api.binance.com/api/v3/klines?symbol=ADAUSDT&interval=1d&limit=30")
eth <- jsonlite::fromJSON("https://api.binance.com/api/v3/klines?symbol=ETHUSDT&interval=1d&limit=30")
doge <- jsonlite::fromJSON("https://api.binance.com/api/v3/klines?symbol=DOGEUSDT&interval=1d&limit=30")
ethbtc <- jsonlite::fromJSON("https://api.binance.com/api/v3/klines?symbol=ETHBTC&interval=1d&limit=30")
adabtc <- jsonlite::fromJSON("https://api.binance.com/api/v3/klines?symbol=ADABTC&interval=1d&limit=30")
dogebtc <- jsonlite::fromJSON("https://api.binance.com/api/v3/klines?symbol=DOGEBTC&interval=1d&limit=30")
#chart1
plot(btc, col="grey", type="l")
par(new=T)
plot(ada, type="l", col="blue", add=TRUE)
par(new=T)
plot(eth, type="l", col="green", add=TRUE)
par(new=T)
plot(doge, type="l", col="orange", add=TRUE)
#chart2
plot(dogebtc, type="l", col="orange", add=TRUE)
par(new=T)
plot(adabtc, type="l", col="blue", add=TRUE)
par(new=T)
plot(ethbtc, type="l", col="green", add=TRUE)
plot(dogebtc, type="l", col="green", add=TRUE)
plot(etcbtc, type="l", col="green", add=TRUE)
plot(ethbtc, type="l", col="green", add=TRUE)
plot(adabtc, type="l", col="green", add=TRUE)
plot(ethbtc, type="l", col="green", add=TRUE)
plot(dogeusdt, type="l", col="green", add=TRUE)
plot(adausdt, type="l", col="green", add=TRUE)
plot(ethusdt, type="l", col="green", add=TRUE)
plot(adausdt, type="l", col="green", add=TRUE)
plot(doge, type="l", col="green", add=TRUE)
x <- matrix(c(0,3,10,16), byrow=TRUE, 2, 2)
x
chisq.test(x)
x <- matrix(c(0,3,29,25), byrow=TRUE, 2, 2)
x
chisq.test(x)
chisq.test(x, correct=FALSE)
FTJ = c("no","yes","no","yes")
MI=c("no","yes","no","yes")
N=c(0,3,10,16)
A=data.frame(FTJ,MI,N)
A
FTJ=xtabs(N~FTJ+MI,data=A)
FTJ
chisq.test(FTJ,correct=F)
MI=c("yes","yes","no","no")
FTJ=xtabs(N~FTJ+MI,data=A)
FTJ
x <- matrix(c(0,3,10,16,0,5), byrow=TRUE, 2, 3)
x
x <- matrix(c(0,3,10,16,0,5), byrow=TRUE, 3, 2)
x
chisq.test(x)
x <- matrix(c(0,3,10,16,0,5,19,4), byrow=TRUE, 4, 2)
x
chisq.test(x)
x <- matrix(c(0,3,29,25), byrow=TRUE, 2, 2)
x
chisq.test(x)
chisq.test(x)
chisq.test(p=0.112)
chisq.test(x,p=0.112)
chisq.test(x)
x <- matrix(c(0,3,29,25), byrow=TRUE, 2, 2)
chisq.test(x)
chisq.test(x, p=p, simulate.p.value=TRUE)
x
View(x)
chisq.test(table(x))
fisher.test(x, conf.int=T, conf.level=0.99)
chisq.test(x, conf.int=T
)
chisq.test(x)
x
fisher.test(x, conf.int=T, conf.level=0.99)
x
y <- matrix(c(10,16,19,12), byrow=TRUE, 2, 2)
y
fisher.test(y, conf.int=T, conf.level=0.99)
library("memisc")
library("ggplot2")
library("qqplotr")
setwd("/Users/Admin/Desktop/workspace/data")
dataset <- data.frame(as.data.set(spss.system.file("exercise1.sav")))
summary(dataset)
boxplot(dataset$cigage)
hist(dataset$cigage)
plot(dataset$cigage, dataset$cigyrs)
ggplot(mapping = aes(sample = dataset$cigage)) + stat_qq_point(size = 2,color = "red") + stat_qq_line(color="green")  + xlab("x-axis") + ylab("y-axis")
stem(dataset$cigyrs)
getwd()
setwd()
setwd($HOME)
getwd()
setwd(~)
setwd("~")
getwd()
library("memisc")
library("ggplot2")
library("qqplotr")
#setwd("/Users/Admin/Desktop/workspace/data")
setwd("~/Documents/GitHub/DA8120/data")
dataset <- data.frame(as.data.set(spss.system.file("marital status and smoking.sav")))
summary(dataset)
boxplot(dataset$cigage)
hist(dataset$cigage)
plot(dataset$cigage, dataset$cigyrs)
ggplot(mapping = aes(sample = dataset$cigage)) + stat_qq_point(size = 2,color = "red") + stat_qq_line(color="green")  + xlab("x-axis") + ylab("y-axis")
stem(dataset$cigyrs)
